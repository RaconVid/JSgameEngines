to do:
pls mark which task you are doing (if any) with github name.
reffer to RPScreatures to see an example of these classes from Version2 engine
current things to do:{
	1:{
		`Math.js` - add functions to Vector class like Vector2.
	},
	1.1:{
		`Math.js` - add functions to Matrix class like Matrix.add (mat)
	},
	1.2:{
		`gameBits.js`/`class Pos`: make optimise Space.Pos to be faster.
		
		can use the following in console for speed tests:
		these tests take ~0.7 to ~1.4 seconds
		
		testing operations (in this case `a.add(b)`) :
		`{let a=new Space.Pos({vec:[1,2],mat:[[2,1],[3,4]],rel:"a",obj:"b"}),r=1<<20;console.time();for(let i=0;i<r){a.add(a);}console.timeEnd();}`

		testing new Space.Pos() :
		`{let a=new Space.Pos({vec:[1,2],mat:[[2,1],[3,4]],rel:"a",obj:"b"}),r=1<<20;console.time();for(let i=0;i<r){new Space.Pos(a)}console.timeEnd();}`
	}
	2:{
		`gameLoop.js` - `UpdateScript`: add things to make them a little more usefull,
	},
	5:{
		`gameBits.js` - `Space.Sprite or just Sprite` : similar to Entity but with more script and costume support, scripts are deleted in Sprite.prototype.delete().
	},
	6:{
		make creatures
	}
}


eco.js - resetting system:{
	save,load
}
main menu;
world.js - updateLayer&Script but for Chunk;
class Sprite - put together Sprite;
Camera class;
add portals:cave portals